import java.io.*;
import java.util.*;
 
import static java.lang.System.exit;
 
/**
 * Created by Sophy titova on 08.05.2016.
 */
public class task5 {
 
 
    static boolean was[];
    static int color[];
    static ArrayList<ArrayList<Integer>> edges;
 
 
    public static void main(String[] args) throws IOException {
        BufferedReader in = new BufferedReader(new FileReader("bipartite.in"));
        PrintWriter out = new PrintWriter(new File("bipartite.out"));
        StringTokenizer st = new StringTokenizer(in.readLine());
        int n = Integer.parseInt(st.nextToken());
        int m = Integer.parseInt(st.nextToken());
 
        was = new boolean[n];
 
        edges = new ArrayList<>(n);
 
        for (int i = 0; i < n; i++) {
            edges.add(new ArrayList<>(0));
        }
 
 
        for (int i = 0; i < m; i++) {
            StringTokenizer str = new StringTokenizer(in.readLine());
            int u = Integer.parseInt(str.nextToken()) - 1;
            int v = Integer.parseInt(str.nextToken()) - 1;
            edges.get(u).add(v);
            edges.get(v).add(u);
            //System.out.println(i);
 
        }
        color = new int[n];
        for ( int i = 0; i < n; i ++) {
            color[i] = 0;
        }
        for (int i = 0; i < n; i++) {
            if (color[i] == 0) {
                dfs(i, 1, out);
            }
        }
        out.print("YES");
        out.close();
    }
 
    public static void dfs(int v, int c, PrintWriter out) throws FileNotFoundException {
        color[v] = c;
 
        for (int u : edges.get(v)) {
            if (color[u] == 0) {
                dfs(u, invert(c), out);
            } else if (color[u] == c) {
                //PrintWriter out = new PrintWriter(new File("output.txt"));
                out.print("NO");
                out.close();
                exit(0);
            }
        }
    }
 
    public static int invert(int c) {
        return c == 1 ? 2 : 1;
    }
}
